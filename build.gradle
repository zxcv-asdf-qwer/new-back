plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'co.kr'
version = System.getenv('VERSION')

java {
    sourceCompatibility = '17'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
    options.encoding = 'UTF-8'
}
// plain jar 생성 x
jar {
    enabled = false
}
// build gradle bootJar 설정
bootJar {
    archiveFileName = 'app.jar' // 생성 파일명
}

ext {
    set('springCloudVersion', "2021.0.8")
    set('queryDslVersion', "5.1.0")
    snippetsDir = file('build/generated-snippets')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        //logback과의 충돌 방지
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // LocalValidatorFactoryBean
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.keycloak:keycloak-admin-client:23.0.6'
    implementation 'org.jboss.resteasy:resteasy-client:6.2.7.Final'
    implementation 'org.jboss.resteasy:resteasy-jackson2-provider:6.2.7.Final'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'

    //social
    implementation 'com.google.api-client:google-api-client-jackson2:2.3.0'

    //api
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.112'

    //db
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    runtimeOnly 'org.postgresql:postgresql:42.7.1'
    implementation 'org.flywaydb:flyway-core'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    //java.lang.NoClassDefFoundError:javax/persistence/Entity 방지

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'
    implementation 'org.springframework:spring-mock:2.0.8'

    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'io.jsonwebtoken:jjwt:0.12.5'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'com.google.firebase:firebase-admin:9.2.0'
// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
// https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    //push
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations:2.17.0'

    //logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    //test
    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //json
    implementation 'org.json:json:20210307'

    // shedlock
    // https://mvnrepository.com/artifact/net.javacrumbs.shedlock/shedlock-spring
    implementation 'net.javacrumbs.shedlock:shedlock-spring:5.13.0'
    // https://mvnrepository.com/artifact/net.javacrumbs.shedlock/shedlock-provider-jdbc-template
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:5.13.0'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

test {
    useJUnitPlatform()
}

// === QueryDsl 빌드 옵션 (선택) ===
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
// querydsl 추가 끝

